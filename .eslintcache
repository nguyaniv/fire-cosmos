[{"C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\index.js":"1","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\App.js":"2","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\reportWebVitals.js":"3","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\pages\\SignUp.jsx":"4","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\pages\\HomePage.jsx":"5","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\pages\\Login.jsx":"6","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\pages\\CosmosStore.jsx":"7","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\pages\\Cart.jsx":"8","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\pages\\ProductPage.jsx":"9","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\Navbar.jsx":"10","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\firebase\\firebase.js":"11","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\GetReady.jsx":"12","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\Header.jsx":"13","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\Telescope.jsx":"14","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\ProductList.jsx":"15","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\MobileNavbar.jsx":"16","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\DesktopNav.jsx":"17","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\ProductPreview.jsx":"18","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\contexts\\FirebaseContext.jsx":"19","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\EmptyCart.jsx":"20","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\Logo.jsx":"21","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\ContactUs.jsx":"22","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\Products.jsx":"23","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\Pagination.jsx":"24","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\data\\StoreProducts.js":"25","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\pages\\Profile.jsx":"26","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\Filters.jsx":"27","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\service\\cartService.js":"28"},{"size":492,"mtime":1609975497646,"results":"29","hashOfConfig":"30"},{"size":1366,"mtime":1611673359720,"results":"31","hashOfConfig":"30"},{"size":375,"mtime":1609975497650,"results":"32","hashOfConfig":"30"},{"size":2049,"mtime":1611143868211,"results":"33","hashOfConfig":"30"},{"size":370,"mtime":1610783631422,"results":"34","hashOfConfig":"30"},{"size":1730,"mtime":1611143687066,"results":"35","hashOfConfig":"30"},{"size":1250,"mtime":1611265528218,"results":"36","hashOfConfig":"30"},{"size":5447,"mtime":1616244618126,"results":"37","hashOfConfig":"30"},{"size":3120,"mtime":1611354747813,"results":"38","hashOfConfig":"30"},{"size":681,"mtime":1609975497635,"results":"39","hashOfConfig":"30"},{"size":1193,"mtime":1616682202888,"results":"40","hashOfConfig":"30"},{"size":822,"mtime":1610466439200,"results":"41","hashOfConfig":"30"},{"size":273,"mtime":1616324918988,"results":"42","hashOfConfig":"30"},{"size":249,"mtime":1610444992114,"results":"43","hashOfConfig":"30"},{"size":4406,"mtime":1615833180155,"results":"44","hashOfConfig":"30"},{"size":3976,"mtime":1615993101759,"results":"45","hashOfConfig":"30"},{"size":2251,"mtime":1616324149418,"results":"46","hashOfConfig":"30"},{"size":920,"mtime":1612095797580,"results":"47","hashOfConfig":"30"},{"size":2559,"mtime":1615846924386,"results":"48","hashOfConfig":"30"},{"size":355,"mtime":1610465802591,"results":"49","hashOfConfig":"30"},{"size":29304,"mtime":1610472477923,"results":"50","hashOfConfig":"30"},{"size":653,"mtime":1611263413758,"results":"51","hashOfConfig":"30"},{"size":697,"mtime":1610623462721,"results":"52","hashOfConfig":"30"},{"size":722,"mtime":1611265325954,"results":"53","hashOfConfig":"30"},{"size":11798,"mtime":1612094379086,"results":"54","hashOfConfig":"30"},{"size":3059,"mtime":1611143852202,"results":"55","hashOfConfig":"30"},{"size":741,"mtime":1611336412629,"results":"56","hashOfConfig":"30"},{"size":681,"mtime":1616244037512,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"5ez78r",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"60"},"C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\index.js",[],["127","128"],"C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\App.js",[],"C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\reportWebVitals.js",[],"C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\pages\\SignUp.jsx",["129"],"import React, { useRef, useState } from 'react'\r\nimport { useAuth } from '../contexts/FirebaseContext';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Logo from '../cmps/Logo'\r\n\r\nexport default function SignUp() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { signup } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [notification, setNotification] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        } try {\r\n            setError('')\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            setNotification('User creacted successfuly')\r\n            history.push(\"/store\")\r\n        } catch {\r\n            setError('Failed to create an account')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"sign-up container\">\r\n            <div className=\"card\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <Logo />\r\n                    </div>\r\n                    <div className=\"text-inputs\">\r\n                        {error && <h3>{error}</h3>}\r\n                        <input type=\"email\" placeholder=\"enter your email\" required ref={emailRef} />\r\n                        <input type=\"password\" placeholder=\"password\" required ref={passwordRef} />\r\n                        <input type=\"password\" placeholder=\"password confirmed\" required ref={passwordConfirmRef} />\r\n                    </div>\r\n                    <button disabled={loading}>Submit</button>\r\n                    <div className=\"redirect\">Aleady a member ? <Link to=\"/login\">Login</Link></div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\pages\\HomePage.jsx",["130"],"import React from 'react'\r\nimport Header from '../cmps/Header';\r\nimport GetReady from '../cmps/GetReady';\r\nimport Telescope from '../cmps/Telescope';\r\nimport ContactUs from '../cmps/ContactUs';\r\n\r\nexport default function HomePage() {\r\n    return (\r\n        <main>\r\n            < Header />\r\n            <GetReady />\r\n            <ContactUs />\r\n        </main>\r\n    )\r\n}\r\n","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\pages\\Login.jsx",["131"],"import React, { useRef, useState } from 'react'\r\nimport { useAuth } from '../contexts/FirebaseContext';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Logo from '../cmps/Logo'\r\n\r\nexport default function Login() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { login } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [notification, setNotification] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            setNotification('connected')\r\n            history.push(\"/store\")\r\n        } catch {\r\n            setError('Failed to login')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"sign-up container\">\r\n            <div className=\"card\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <Logo />\r\n                    </div>\r\n                    <div className=\"text-inputs\">\r\n                        {error && <h3>{error}</h3>}\r\n                        <input type=\"email\" placeholder=\"enter your email\" required ref={emailRef} />\r\n                        <input type=\"password\" placeholder=\"password\" required ref={passwordRef} />\r\n                    </div>\r\n                    <button disabled={loading}>Submit</button>\r\n\r\n                    <div className=\"redirect\">not a member yet ? <Link to=\"/signup\"> Sign up</Link></div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\pages\\CosmosStore.jsx",["132","133","134","135","136"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport firebase from 'firebase';\r\nimport ProductList from '../cmps/ProductList'\r\nexport default function CosmosStore() {\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    const [img, setImg] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const toggleVisibility = () => {\r\n        if (window.pageYOffset > 300) {\r\n          setIsVisible(true);\r\n        } else {\r\n          setIsVisible(false);\r\n        }\r\n      };\r\n\r\n\r\n      const scrollToTop = () => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", toggleVisibility);\r\n        scrollToTop()\r\n      }, []);\r\n\r\n    if (loading) {\r\n        return <h1>wait</h1>\r\n    }\r\n    return (\r\n        //  TODO: use firebase to store products name,images and details\r\n        <main className=\"cosmos-shop\">\r\n            <div className=\"header\">\r\n                <h1>The best quality - At the best price</h1>\r\n                <Link to=\"/store/9\">Read More..</Link>\r\n            </div>\r\n          \r\n\r\n            <ProductList />\r\n\r\n        </main>\r\n\r\n    )\r\n}\r\n","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\pages\\Cart.jsx",["137","138","139","140","141"],"import React, { useState, useEffect } from 'react'\r\nimport firebase from 'firebase';\r\nimport { useAuth, useStoreUpdate } from '../contexts/FirebaseContext';\r\nimport { Modal } from 'react-responsive-modal';\r\nimport EmptyCart from '../cmps/EmptyCart'\r\nimport 'react-responsive-modal/styles.css';\r\n\r\nexport default function Cart() {\r\n    const [userMail, setUserMail] = useState(undefined)\r\n    const [userCart, setUserCart] = useState(undefined)\r\n    const [totalAmmout, setTotalAmmout] = useState(0)\r\n    const user = useAuth()\r\n    const userDoc = firebase.firestore().collection(\"cart\").doc(userMail).collection(\"items\")\r\n    const updateStore = useStoreUpdate()\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const onOpenModal = () => {\r\n        setOpen(true)\r\n        updateData()\r\n\r\n    }\r\n    const onCloseModal = () => setOpen(false);\r\n\r\n    useEffect(() => {\r\n        if (user.currentUser) {\r\n            setUserMail(user.currentUser.email);\r\n            updateStore();\r\n\r\n        }\r\n    }, [userCart]);\r\n\r\n    useEffect(() => {\r\n        updateData()\r\n        updateStore();\r\n    }, [userMail]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        updateCart()\r\n\r\n    }, []);\r\n\r\n    const updateCart = () => {\r\n        userDoc.get().then(async (querySnapshot) => {\r\n            const cartItem = []\r\n            querySnapshot.forEach((doc) => {\r\n                let cart = doc.data()\r\n                cartItem.push(cart)\r\n            })\r\n            await setUserCart(cartItem)\r\n        });\r\n    }\r\n\r\n    const updateData = async () => {\r\n        if (user.currentUser) {\r\n            await updateCart()\r\n            if (userCart) {\r\n                let totalPrice = 0;\r\n                await userCart.forEach(item => {\r\n                    totalPrice += +item.cartItem.price\r\n                    setTotalAmmout(totalPrice)\r\n                    updateCart()\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const emptyCart = async () => {\r\n        await userDoc.get()\r\n            .then(res => {\r\n                res.forEach(element => {\r\n                    element.ref.delete();\r\n                });\r\n            });\r\n        // await userDoc.set({\r\n        //     item: firebase.firestore.FieldValue.arrayUnion()\r\n        // })\r\n        await updateData()\r\n        await updateStore()\r\n        await updateCart()\r\n        await setTotalAmmout(0)\r\n        await onCloseModal()\r\n\r\n    }\r\n\r\n    async function removeFromCart(itemId, name, url, price, category, type, description, ammout) {\r\n        const cartItem = { itemId, name, url, price, category, type, description, ammout }\r\n        const db = await firebase.firestore()\r\n        const collItems = db.collection(\"cart\").doc(userMail).collection(\"items\").limit(1)\r\n        const items_qurey = collItems.where('cartItem.itemId', '==', cartItem.itemId)\r\n        try {\r\n            await items_qurey.get().then(async function (querySnapshot) {\r\n                querySnapshot.forEach(async function (doc) {\r\n                    await doc.ref.delete()\r\n                });\r\n            })\r\n            await items_qurey.get().then(async function (querySnapshot) {\r\n                await updateData()\r\n                await updateStore()\r\n                await updateCart()\r\n            })\r\n\r\n        }\r\n\r\n        catch {\r\n            console.error('couldnt delete item');\r\n        }\r\n    }\r\n\r\n    if (!userCart || userCart && userCart.length === 0) return <EmptyCart />\r\n    return (\r\n        <main className=\"main-cart\">\r\n            <div className=\"container\">\r\n                {userCart && userCart.length >= 1 && userCart.map((item) => {\r\n                    return (\r\n                        < div className=\"item-container\" key={item.cartItem.itemId} >\r\n                            <h3>{item.cartItem.name}</h3>\r\n                            <p>${item.cartItem.price}</p>\r\n                            <img height=\"150px\" width=\"150px\" src={item.cartItem.url} alt=\"\" />\r\n                            <button onClick={async () => {\r\n                                await removeFromCart(item.cartItem.itemId, item.cartItem.name, item.cartItem.url, item.cartItem.price, item.cartItem.category, item.cartItem.type, item.cartItem.description, item.cartItem.ammout)\r\n                            }}>X</button>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n            </div>\r\n            <button className=\"fixed-bottom-link\" onClick={onOpenModal}>finish</button>\r\n            <Modal showCloseIcon={true} open={open} onClose={onCloseModal} center>\r\n                <div className=\"modal-container\">\r\n                    <div>\r\n                        {userCart && userCart.length >= 1 &&\r\n                            userCart.map(item => {\r\n                                return (\r\n                                    <div key={item.cartItem._id}>\r\n                                        <li key={item.cartItem._id}>{item.cartItem.name} <span className=\"strong\">{'$' + item.cartItem.price}</span></li>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        {totalAmmout &&\r\n\r\n                            <h3>total price: ${totalAmmout}</h3>\r\n                        }\r\n                    </div>\r\n                    <button onClick={emptyCart}>Click to Pay</button>\r\n                </div>\r\n            </Modal>\r\n        </main >\r\n    )\r\n}\r\n\r\n","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\pages\\ProductPage.jsx",["142","143"],"import React, { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useParams, Link, useHistory } from 'react-router-dom'\r\nimport { StoreProducts } from '../data/StoreProducts'\r\nimport { useAuth, useStoreUpdate } from '../contexts/FirebaseContext';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowAltCircleRight, faArrowAltCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { addToCart } from '../service/cartService'\r\n\r\nexport default function ProductPage() {\r\n    const [product, setProduct] = useState('')\r\n    const [userMail, setUserMail] = useState(undefined)\r\n    const [itemAdd, setItemAdd] = useState(true)\r\n    const user = useAuth()\r\n    const { id } = useParams()\r\n    const updateStore = useStoreUpdate()\r\n    const history = useHistory()\r\n\r\n  \r\n    const getProduct = async () => {\r\n        let foundProduct = await StoreProducts.filter(product => product._id === +id)\r\n        setProduct(...foundProduct)\r\n    }\r\n\r\n    const OnAddToCart = async (itemId, name, url, price, category, type, description) => {\r\n        const userColl =  userMail\r\n\r\n        try {\r\n            await addToCart(userColl, itemId, name, url, price, category, type, description)\r\n            await updateStore()\r\n            await setItemAdd(false)\r\n            await setTimeout(() => {\r\n                setItemAdd(true)\r\n            }, 3000); \r\n        }\r\n        catch {\r\n            return history.push('/login')\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user.currentUser) setUserMail(user.currentUser.email)\r\n        if (id !== 0) getProduct()\r\n    }, [id])\r\n\r\n    return (\r\n        <main className=\"product-page\">\r\n            <div className=\"container\">\r\n            <h2 className={itemAdd ? `cart-added` : 'cart-added active'}>Item has been added to your cart</h2>\r\n\r\n                <h3>{product.name}</h3>\r\n                <div className=\"img-arrow-container\">\r\n                    {product._id - 1 === 0 ?\r\n                        <Link to={`/store/${1}`}><FontAwesomeIcon size=\"lg\" icon={faArrowAltCircleLeft} /></Link>\r\n                        :\r\n                        <Link to={`/store/${product._id - 1}`}><FontAwesomeIcon size=\"lg\" icon={faArrowAltCircleLeft} /></Link>\r\n                    }\r\n                    <img height=\"300px\" width=\"300px\" src={product.url} />\r\n                    {product._id + 1 === 10 ?\r\n                        <Link to={`/store/${1}`}><FontAwesomeIcon size=\"lg\" icon={faArrowAltCircleRight} /></Link>\r\n                        :\r\n                        <Link to={`/store/${product._id + 1}`}><FontAwesomeIcon size=\"lg\" icon={faArrowAltCircleRight} /></Link>\r\n                    }\r\n                </div>\r\n                <p>${product.price}</p>\r\n                <p>{product.description}</p>\r\n                <button onClick={async () => {\r\n                    await OnAddToCart(product._id, product.name, product.url, \r\n                        product.price, product.category, product.type, product.description)\r\n                }}>Add To Cart</button>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\Navbar.jsx",[],"C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\firebase\\firebase.js",[],"C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\GetReady.jsx",[],"C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\Header.jsx",[],"C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\Telescope.jsx",["144"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nexport default function Telescope() {\r\n    return (\r\n        <div className=\"telescope-power\">\r\n            <h1>Discover the true power of telescope</h1>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\ProductList.jsx",[],"C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\MobileNavbar.jsx",["145","146","147","148","149","150"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Menu2 from '../style/icons/menu2.png';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faShoppingCart, faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useAuth, useStore } from '../contexts/FirebaseContext';\r\nimport firebase from 'firebase';\r\n\r\nexport default function MobileNavbar() {\r\n    const user = useAuth()\r\n    const cart = useStore()\r\n    const [userCart, setUserCart] = useState(0)\r\n    const [userMail, setUserMail] = useState(undefined)\r\n    const [sideNav, setSideNav] = useState('')\r\n\r\n    const userDoc = userMail ? firebase.firestore().collection(\"cart\").doc(user.currentUser.email).collection(\"items\") : undefined;\r\n\r\n\r\n\r\n\r\n    const toggleNav = () => {\r\n        sideNav === '-active' ? setSideNav('') : setSideNav('-active')\r\n    }\r\n\r\n\r\n    const updateCart = () => {\r\n        if (userDoc === undefined) return\r\n        userDoc.get().then(async (querySnapshot) => {\r\n            setUserCart(querySnapshot.size)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        if (user.currentUser) {\r\n            setUserMail(user.currentUser.email);\r\n            updateCart()\r\n        }\r\n    }, [userDoc])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mobile-navbar\">\r\n                {user.currentUser && user.currentUser.email !== null ?\r\n                    <>\r\n                        <img onClick={toggleNav} src={Menu2} />\r\n                        <div>\r\n                            <Link to=\"/cart\" className=\"btn-white\"> <FontAwesomeIcon size=\"lg\" icon={faShoppingCart} /><span>{userCart ? userCart : 0}</span></Link>\r\n                            {/* <Link to={`/profile`} className=\"btn-white\"><FontAwesomeIcon size=\"lg\" icon={faUserCircle} /> </Link> */}\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <img onClick={toggleNav} src={Menu2} />\r\n                        <div>\r\n                            <Link to=\"/cart\" className=\"btn-white\"> <FontAwesomeIcon size=\"lg\" icon={faShoppingCart} /><span>0</span></Link>\r\n                            {/* <Link to={`/login`} className=\"btn-white\"><FontAwesomeIcon size=\"lg\" icon={faUserCircle} /> </Link> */}\r\n                        </div>\r\n\r\n                    </>\r\n                }\r\n            </div>\r\n\r\n            <div onClick={toggleNav} className={'side-nav' + sideNav}>\r\n                <div className=\"dynamic-links\">\r\n                    {user.currentUser && user.currentUser.email !== null ?\r\n\r\n                        <div className=\"dynamic-links\">\r\n                            {/* <Link onClick={toggleNav} to=\"/profile\" className=\"sidenav-link\" >Profile</Link> */}\r\n                            <Link onClick={toggleNav} to=\"/cart\" className=\"sidenav-link\" >My Cart</Link>\r\n                            <button onClick={() => {\r\n                                user.logout()\r\n                            }}>log out</button>\r\n                        </div> :\r\n\r\n\r\n                        <div className=\"dynamic-links\">\r\n                            <Link onClick={toggleNav} to=\"/login\" className=\"sidenav-link\" >log in</Link>\r\n                            <Link onClick={toggleNav} to=\"/signup\" className=\"sidenav-link\">Sign up</Link>\r\n                        </div>\r\n\r\n                    }\r\n                </div>\r\n                <div onClick={toggleNav} className={'sidenav-links'}>\r\n                    <Link onClick={toggleNav} className=\"sidnav-link\" to=\"/homepage\" >Home</Link>\r\n                    <Link onClick={toggleNav} className=\"sidnav-link\" to=\"/store\" >Store</Link>\r\n                    {/* <Link onClick={toggleNav} className=\"sidnav-link\" to=\"/contact\" >Contact us</Link> */}\r\n                </div>\r\n\r\n\r\n                <button onClick={toggleNav} className=\"close-nav\">X</button>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\DesktopNav.jsx",["151","152"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/FirebaseContext';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faShoppingCart, faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport firebase from 'firebase';\r\n\r\nimport Logo from '../cmps/Logo'\r\n\r\n\r\nexport default function DesktopNav() {\r\n    const history = useHistory()\r\n    const user = useAuth()\r\n    const [userCart, setUserCart] = useState(0)\r\n    const [userMail, setUserMail] = useState(undefined)\r\n    \r\n    const itemsColl = userMail ? firebase.firestore().collection(\"cart\").doc(user.currentUser.email).collection(\"items\") : undefined\r\n\r\n\r\n    const updateCart = () => {\r\n        if (itemsColl === undefined) return\r\n        itemsColl.get().then(async (querySnapshot) => {\r\n            setUserCart(querySnapshot.size)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user.currentUser) {\r\n\r\n            setUserMail(user.currentUser.email);\r\n            updateCart()\r\n        }\r\n    },\r\n        [itemsColl])\r\n\r\n \r\n\r\n    return (\r\n        <div className=\"desktop-navbar\">\r\n            <Logo />\r\n            <div className=\"nav-links\">\r\n                <Link to=\"/homepage\" className=\"nav-link\">Home</Link>\r\n                <Link to=\"/store\" className=\"nav-link\">Store</Link>\r\n                {/* <Link to=\"/about\" className=\"nav-link\">About</Link> */}\r\n            </div>\r\n\r\n            {user.currentUser && user.currentUser.email !== null ?\r\n                <div className=\"dynamic-links\">\r\n                    <Link to=\"/cart\" className=\"btn-white\"> <FontAwesomeIcon size=\"lg\" icon={faShoppingCart} />\r\n                        <span>{userCart && userCart}</span></Link>\r\n                    <button onClick={() => {\r\n                        user.logout()\r\n                        history.push(\"/\")\r\n                    }}>log out</button>\r\n                </div>\r\n                :\r\n                <div className=\"dynamic-links\">\r\n                    <Link to=\"/login\" className=\"nav-link\">log in</Link>\r\n                    <Link to=\"/signup\" className=\"nav-link\">Sign up</Link>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\ProductPreview.jsx",[],["153","154"],"C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\contexts\\FirebaseContext.jsx",["155","156"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport { auth } from '../firebase/firebase';\r\nimport firebase from '../firebase/firebase';\r\n\r\nconst FirebaseContext = React.createContext()\r\nconst StoreContext = React.createContext()\r\nconst StoreContextUpdate = React.createContext()\r\n\r\nexport function useAuth() {\r\n    return useContext(FirebaseContext)\r\n}\r\nexport function useStore() {\r\n    return useContext(StoreContext)\r\n}\r\n\r\nexport function useStoreUpdate() {\r\n    return useContext(StoreContextUpdate)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState();\r\n    const [loading, setLoading] = useState(true)\r\n    const [userMail, setUserMail] = useState(undefined)\r\n    const [userCart, setUserCart] = useState(undefined)\r\n    const userDoc = firebase.firestore().collection(\"cart\").doc(userMail).collection(\"items\")\r\n\r\n    const updateCart = () => {\r\n        userDoc.get().then(async (querySnapshot) => {\r\n            const item = await []\r\n            await querySnapshot.forEach(async (doc) => {\r\n                await item.push(doc.data())\r\n            })\r\n            await setUserCart(item)\r\n        })\r\n\r\n    }\r\n\r\n\r\n    async function refreshCart() {\r\n        await setUserMail(currentUser.email)\r\n        await updateCart()\r\n    }\r\n\r\n    function signup(email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function login(email, pasword) {\r\n        return auth.signInWithEmailAndPassword(email, pasword)\r\n    }\r\n\r\n    function logout() {\r\n        return auth.signOut()\r\n    }\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(async user => {\r\n            await setCurrentUser(user)\r\n            await setLoading(false)\r\n        })\r\n        return unsubscribe\r\n    }, [currentUser])\r\n\r\n\r\n    useEffect(() => {\r\n        if (currentUser && currentUser.email) {\r\n            console.log(userCart.length);\r\n            refreshCart()\r\n        }\r\n    }, [userMail])\r\n\r\n    useEffect(() => {\r\n\r\n        updateCart()\r\n    }, [])\r\n\r\n\r\n    const value = {\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout\r\n    }\r\n    return (\r\n        <FirebaseContext.Provider value={value}>\r\n            <StoreContext.Provider value={userCart && userCart.length}>\r\n                <StoreContextUpdate.Provider value={updateCart}>\r\n                    {!loading && children}\r\n                </StoreContextUpdate.Provider>\r\n            </StoreContext.Provider>\r\n        </FirebaseContext.Provider>\r\n    )\r\n}\r\n","C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\EmptyCart.jsx",[],"C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\Logo.jsx",[],"C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\ContactUs.jsx",[],"C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\Products.jsx",[],"C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\Pagination.jsx",[],"C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\data\\StoreProducts.js",[],"C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\pages\\Profile.jsx",[],"C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\cmps\\Filters.jsx",[],"C:\\Users\\YanivLap\\Desktop\\cosmos\\cosmo-fire\\src\\service\\cartService.js",["157"],"import firebase from 'firebase';\r\n\r\n\r\nexport async function addToCart(userMail, itemId, name, url, price, category, type, description) {\r\n\r\n    const ammout = 1\r\n    const cartItem = { itemId, name, url, price, category, type, description, ammout }\r\n\r\n    if (userMail === undefined) throw console.error('please Login');\r\n\r\n    const db = await firebase.firestore()\r\n    const userDoc = await firebase.firestore().collection(\"cart\").doc(userMail)\r\n\r\n    await db.collection(\"cart\").doc(userMail).collection(\"items\").add({\r\n        cartItem\r\n    })\r\n    await db.collection(\"cart\").doc(userMail).collection(\"items\").get()\r\n     .then(snapshot => console.log(snapshot.size));\r\n \r\n}\r\n",{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":12,"column":12,"nodeType":"164","messageId":"165","endLine":12,"endColumn":24},{"ruleId":"162","severity":1,"message":"166","line":4,"column":8,"nodeType":"164","messageId":"165","endLine":4,"endColumn":17},{"ruleId":"162","severity":1,"message":"163","line":11,"column":12,"nodeType":"164","messageId":"165","endLine":11,"endColumn":24},{"ruleId":"162","severity":1,"message":"167","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":16},{"ruleId":"162","severity":1,"message":"168","line":6,"column":12,"nodeType":"164","messageId":"165","endLine":6,"endColumn":21},{"ruleId":"162","severity":1,"message":"169","line":7,"column":12,"nodeType":"164","messageId":"165","endLine":7,"endColumn":15},{"ruleId":"162","severity":1,"message":"170","line":7,"column":17,"nodeType":"164","messageId":"165","endLine":7,"endColumn":23},{"ruleId":"162","severity":1,"message":"171","line":8,"column":21,"nodeType":"164","messageId":"165","endLine":8,"endColumn":31},{"ruleId":"172","severity":1,"message":"173","line":31,"column":8,"nodeType":"174","endLine":31,"endColumn":18,"suggestions":"175"},{"ruleId":"172","severity":1,"message":"176","line":36,"column":8,"nodeType":"174","endLine":36,"endColumn":18,"suggestions":"177"},{"ruleId":"172","severity":1,"message":"178","line":43,"column":8,"nodeType":"174","endLine":43,"endColumn":10,"suggestions":"179"},{"ruleId":"180","severity":1,"message":"181","line":113,"column":19,"nodeType":"182","messageId":"183","endLine":113,"endColumn":21},{"ruleId":"180","severity":1,"message":"181","line":113,"column":31,"nodeType":"182","messageId":"183","endLine":113,"endColumn":33},{"ruleId":"172","severity":1,"message":"184","line":45,"column":8,"nodeType":"174","endLine":45,"endColumn":12,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":59,"column":21,"nodeType":"188","endLine":59,"endColumn":75},{"ruleId":"162","severity":1,"message":"189","line":2,"column":9,"nodeType":"164","messageId":"165","endLine":2,"endColumn":13},{"ruleId":"162","severity":1,"message":"190","line":2,"column":16,"nodeType":"164","messageId":"165","endLine":2,"endColumn":26},{"ruleId":"162","severity":1,"message":"191","line":5,"column":26,"nodeType":"164","messageId":"165","endLine":5,"endColumn":38},{"ruleId":"162","severity":1,"message":"192","line":11,"column":11,"nodeType":"164","messageId":"165","endLine":11,"endColumn":15},{"ruleId":"172","severity":1,"message":"193","line":37,"column":8,"nodeType":"174","endLine":37,"endColumn":17,"suggestions":"194"},{"ruleId":"186","severity":1,"message":"187","line":45,"column":25,"nodeType":"188","endLine":45,"endColumn":64},{"ruleId":"186","severity":1,"message":"187","line":53,"column":25,"nodeType":"188","endLine":53,"endColumn":64},{"ruleId":"162","severity":1,"message":"191","line":5,"column":26,"nodeType":"164","messageId":"165","endLine":5,"endColumn":38},{"ruleId":"172","severity":1,"message":"193","line":34,"column":9,"nodeType":"174","endLine":34,"endColumn":20,"suggestions":"195"},{"ruleId":"158","replacedBy":"196"},{"ruleId":"160","replacedBy":"197"},{"ruleId":"172","severity":1,"message":"198","line":69,"column":8,"nodeType":"174","endLine":69,"endColumn":18,"suggestions":"199"},{"ruleId":"172","severity":1,"message":"178","line":74,"column":8,"nodeType":"174","endLine":74,"endColumn":10,"suggestions":"200"},{"ruleId":"162","severity":1,"message":"201","line":12,"column":11,"nodeType":"164","messageId":"165","endLine":12,"endColumn":18},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"no-unused-vars","'notification' is assigned a value but never used.","Identifier","unusedVar","'Telescope' is defined but never used.","'firebase' is defined but never used.","'isVisible' is assigned a value but never used.","'img' is assigned a value but never used.","'setImg' is assigned a value but never used.","'setLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'updateStore' and 'user.currentUser'. Either include them or remove the dependency array.","ArrayExpression",["204"],"React Hook useEffect has missing dependencies: 'updateData' and 'updateStore'. Either include them or remove the dependency array.",["205"],"React Hook useEffect has a missing dependency: 'updateCart'. Either include it or remove the dependency array.",["206"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has missing dependencies: 'getProduct' and 'user.currentUser'. Either include them or remove the dependency array.",["207"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'useHistory' is defined but never used.","'faUserCircle' is defined but never used.","'cart' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'updateCart' and 'user.currentUser'. Either include them or remove the dependency array.",["208"],["209"],["202"],["203"],"React Hook useEffect has missing dependencies: 'currentUser', 'refreshCart', and 'userCart.length'. Either include them or remove the dependency array.",["210"],["211"],"'userDoc' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"216","fix":"226"},"Update the dependencies array to be: [updateStore, user.currentUser, userCart]",{"range":"227","text":"228"},"Update the dependencies array to be: [updateData, updateStore, userMail]",{"range":"229","text":"230"},"Update the dependencies array to be: [updateCart]",{"range":"231","text":"232"},"Update the dependencies array to be: [getProduct, id, user.currentUser]",{"range":"233","text":"234"},"Update the dependencies array to be: [updateCart, user.currentUser, userDoc]",{"range":"235","text":"236"},"Update the dependencies array to be: [itemsColl, updateCart, user.currentUser]",{"range":"237","text":"238"},"Update the dependencies array to be: [currentUser, refreshCart, userCart.length, userMail]",{"range":"239","text":"240"},{"range":"241","text":"232"},[1006,1016],"[updateStore, user.currentUser, userCart]",[1098,1108],"[updateData, updateStore, userMail]",[1172,1174],"[updateCart]",[1626,1630],"[getProduct, id, user.currentUser]",[1259,1268],"[updateCart, user.currentUser, userDoc]",[1098,1109],"[itemsColl, updateCart, user.currentUser]",[2002,2012],"[currentUser, refreshCart, userCart.length, userMail]",[2071,2073]]