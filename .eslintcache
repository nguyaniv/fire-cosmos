[{"C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\index.js":"1","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\reportWebVitals.js":"2","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\App.js":"3","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\pages\\HomePage.jsx":"4","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\pages\\SignUp.jsx":"5","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\pages\\Cart.jsx":"6","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\pages\\CosmosStore.jsx":"7","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\Navbar.jsx":"8","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\pages\\ProductPage.jsx":"9","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\pages\\Login.jsx":"10","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\contexts\\FirebaseContext.jsx":"11","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\service\\cartService.js":"12","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\data\\StoreProducts.js":"13","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\firebase\\firebase.js":"14","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\Telescope.jsx":"15","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\GetReady.jsx":"16","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\Header.jsx":"17","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\ContactUs.jsx":"18","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\Logo.jsx":"19","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\EmptyCart.jsx":"20","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\ProductList.jsx":"21","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\MobileNavbar.jsx":"22","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\DesktopNav.jsx":"23","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\Filters.jsx":"24","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\Products.jsx":"25","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\Pagination.jsx":"26","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\ProductPreview.jsx":"27"},{"size":492,"mtime":1616697836674,"results":"28","hashOfConfig":"29"},{"size":375,"mtime":1616697836678,"results":"30","hashOfConfig":"29"},{"size":1366,"mtime":1616697836652,"results":"31","hashOfConfig":"29"},{"size":370,"mtime":1616697836676,"results":"32","hashOfConfig":"29"},{"size":2049,"mtime":1616697836678,"results":"33","hashOfConfig":"29"},{"size":5447,"mtime":1616697836675,"results":"34","hashOfConfig":"29"},{"size":1250,"mtime":1616697836675,"results":"35","hashOfConfig":"29"},{"size":681,"mtime":1616697836658,"results":"36","hashOfConfig":"29"},{"size":3120,"mtime":1616697836677,"results":"37","hashOfConfig":"29"},{"size":1730,"mtime":1616697836676,"results":"38","hashOfConfig":"29"},{"size":2559,"mtime":1616697836661,"results":"39","hashOfConfig":"29"},{"size":681,"mtime":1616697836679,"results":"40","hashOfConfig":"29"},{"size":11798,"mtime":1616697836667,"results":"41","hashOfConfig":"29"},{"size":691,"mtime":1616752814781,"results":"42","hashOfConfig":"29"},{"size":249,"mtime":1616697836660,"results":"43","hashOfConfig":"29"},{"size":822,"mtime":1616697836655,"results":"44","hashOfConfig":"29"},{"size":273,"mtime":1616697836656,"results":"45","hashOfConfig":"29"},{"size":653,"mtime":1616703765759,"results":"46","hashOfConfig":"29"},{"size":29304,"mtime":1616697836656,"results":"47","hashOfConfig":"29"},{"size":355,"mtime":1616697836654,"results":"48","hashOfConfig":"29"},{"size":4406,"mtime":1616697836659,"results":"49","hashOfConfig":"29"},{"size":3976,"mtime":1616697836657,"results":"50","hashOfConfig":"29"},{"size":2251,"mtime":1616697836654,"results":"51","hashOfConfig":"29"},{"size":741,"mtime":1616697836655,"results":"52","hashOfConfig":"29"},{"size":697,"mtime":1616697836660,"results":"53","hashOfConfig":"29"},{"size":722,"mtime":1616697836658,"results":"54","hashOfConfig":"29"},{"size":920,"mtime":1616697836659,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"qrtzqs",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\index.js",[],["123","124"],"C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\reportWebVitals.js",[],"C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\App.js",[],"C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\pages\\HomePage.jsx",["125"],"import React from 'react'\r\nimport Header from '../cmps/Header';\r\nimport GetReady from '../cmps/GetReady';\r\nimport Telescope from '../cmps/Telescope';\r\nimport ContactUs from '../cmps/ContactUs';\r\n\r\nexport default function HomePage() {\r\n    return (\r\n        <main>\r\n            < Header />\r\n            <GetReady />\r\n            <ContactUs />\r\n        </main>\r\n    )\r\n}\r\n","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\pages\\SignUp.jsx",["126"],"import React, { useRef, useState } from 'react'\r\nimport { useAuth } from '../contexts/FirebaseContext';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Logo from '../cmps/Logo'\r\n\r\nexport default function SignUp() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { signup } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [notification, setNotification] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        } try {\r\n            setError('')\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            setNotification('User creacted successfuly')\r\n            history.push(\"/store\")\r\n        } catch {\r\n            setError('Failed to create an account')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"sign-up container\">\r\n            <div className=\"card\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <Logo />\r\n                    </div>\r\n                    <div className=\"text-inputs\">\r\n                        {error && <h3>{error}</h3>}\r\n                        <input type=\"email\" placeholder=\"enter your email\" required ref={emailRef} />\r\n                        <input type=\"password\" placeholder=\"password\" required ref={passwordRef} />\r\n                        <input type=\"password\" placeholder=\"password confirmed\" required ref={passwordConfirmRef} />\r\n                    </div>\r\n                    <button disabled={loading}>Submit</button>\r\n                    <div className=\"redirect\">Aleady a member ? <Link to=\"/login\">Login</Link></div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\pages\\Cart.jsx",["127","128","129","130","131"],"import React, { useState, useEffect } from 'react'\r\nimport firebase from 'firebase';\r\nimport { useAuth, useStoreUpdate } from '../contexts/FirebaseContext';\r\nimport { Modal } from 'react-responsive-modal';\r\nimport EmptyCart from '../cmps/EmptyCart'\r\nimport 'react-responsive-modal/styles.css';\r\n\r\nexport default function Cart() {\r\n    const [userMail, setUserMail] = useState(undefined)\r\n    const [userCart, setUserCart] = useState(undefined)\r\n    const [totalAmmout, setTotalAmmout] = useState(0)\r\n    const user = useAuth()\r\n    const userDoc = firebase.firestore().collection(\"cart\").doc(userMail).collection(\"items\")\r\n    const updateStore = useStoreUpdate()\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const onOpenModal = () => {\r\n        setOpen(true)\r\n        updateData()\r\n\r\n    }\r\n    const onCloseModal = () => setOpen(false);\r\n\r\n    useEffect(() => {\r\n        if (user.currentUser) {\r\n            setUserMail(user.currentUser.email);\r\n            updateStore();\r\n\r\n        }\r\n    }, [userCart]);\r\n\r\n    useEffect(() => {\r\n        updateData()\r\n        updateStore();\r\n    }, [userMail]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        updateCart()\r\n\r\n    }, []);\r\n\r\n    const updateCart = () => {\r\n        userDoc.get().then(async (querySnapshot) => {\r\n            const cartItem = []\r\n            querySnapshot.forEach((doc) => {\r\n                let cart = doc.data()\r\n                cartItem.push(cart)\r\n            })\r\n            await setUserCart(cartItem)\r\n        });\r\n    }\r\n\r\n    const updateData = async () => {\r\n        if (user.currentUser) {\r\n            await updateCart()\r\n            if (userCart) {\r\n                let totalPrice = 0;\r\n                await userCart.forEach(item => {\r\n                    totalPrice += +item.cartItem.price\r\n                    setTotalAmmout(totalPrice)\r\n                    updateCart()\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const emptyCart = async () => {\r\n        await userDoc.get()\r\n            .then(res => {\r\n                res.forEach(element => {\r\n                    element.ref.delete();\r\n                });\r\n            });\r\n        // await userDoc.set({\r\n        //     item: firebase.firestore.FieldValue.arrayUnion()\r\n        // })\r\n        await updateData()\r\n        await updateStore()\r\n        await updateCart()\r\n        await setTotalAmmout(0)\r\n        await onCloseModal()\r\n\r\n    }\r\n\r\n    async function removeFromCart(itemId, name, url, price, category, type, description, ammout) {\r\n        const cartItem = { itemId, name, url, price, category, type, description, ammout }\r\n        const db = await firebase.firestore()\r\n        const collItems = db.collection(\"cart\").doc(userMail).collection(\"items\").limit(1)\r\n        const items_qurey = collItems.where('cartItem.itemId', '==', cartItem.itemId)\r\n        try {\r\n            await items_qurey.get().then(async function (querySnapshot) {\r\n                querySnapshot.forEach(async function (doc) {\r\n                    await doc.ref.delete()\r\n                });\r\n            })\r\n            await items_qurey.get().then(async function (querySnapshot) {\r\n                await updateData()\r\n                await updateStore()\r\n                await updateCart()\r\n            })\r\n\r\n        }\r\n\r\n        catch {\r\n            console.error('couldnt delete item');\r\n        }\r\n    }\r\n\r\n    if (!userCart || userCart && userCart.length === 0) return <EmptyCart />\r\n    return (\r\n        <main className=\"main-cart\">\r\n            <div className=\"container\">\r\n                {userCart && userCart.length >= 1 && userCart.map((item) => {\r\n                    return (\r\n                        < div className=\"item-container\" key={item.cartItem.itemId} >\r\n                            <h3>{item.cartItem.name}</h3>\r\n                            <p>${item.cartItem.price}</p>\r\n                            <img height=\"150px\" width=\"150px\" src={item.cartItem.url} alt=\"\" />\r\n                            <button onClick={async () => {\r\n                                await removeFromCart(item.cartItem.itemId, item.cartItem.name, item.cartItem.url, item.cartItem.price, item.cartItem.category, item.cartItem.type, item.cartItem.description, item.cartItem.ammout)\r\n                            }}>X</button>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n            </div>\r\n            <button className=\"fixed-bottom-link\" onClick={onOpenModal}>finish</button>\r\n            <Modal showCloseIcon={true} open={open} onClose={onCloseModal} center>\r\n                <div className=\"modal-container\">\r\n                    <div>\r\n                        {userCart && userCart.length >= 1 &&\r\n                            userCart.map(item => {\r\n                                return (\r\n                                    <div key={item.cartItem._id}>\r\n                                        <li key={item.cartItem._id}>{item.cartItem.name} <span className=\"strong\">{'$' + item.cartItem.price}</span></li>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        {totalAmmout &&\r\n\r\n                            <h3>total price: ${totalAmmout}</h3>\r\n                        }\r\n                    </div>\r\n                    <button onClick={emptyCart}>Click to Pay</button>\r\n                </div>\r\n            </Modal>\r\n        </main >\r\n    )\r\n}\r\n\r\n","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\pages\\CosmosStore.jsx",["132","133","134","135","136"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport firebase from 'firebase';\r\nimport ProductList from '../cmps/ProductList'\r\nexport default function CosmosStore() {\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    const [img, setImg] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const toggleVisibility = () => {\r\n        if (window.pageYOffset > 300) {\r\n          setIsVisible(true);\r\n        } else {\r\n          setIsVisible(false);\r\n        }\r\n      };\r\n\r\n\r\n      const scrollToTop = () => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", toggleVisibility);\r\n        scrollToTop()\r\n      }, []);\r\n\r\n    if (loading) {\r\n        return <h1>wait</h1>\r\n    }\r\n    return (\r\n        //  TODO: use firebase to store products name,images and details\r\n        <main className=\"cosmos-shop\">\r\n            <div className=\"header\">\r\n                <h1>The best quality - At the best price</h1>\r\n                <Link to=\"/store/9\">Read More..</Link>\r\n            </div>\r\n          \r\n\r\n            <ProductList />\r\n\r\n        </main>\r\n\r\n    )\r\n}\r\n","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\Navbar.jsx",[],"C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\pages\\ProductPage.jsx",["137","138"],"import React, { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useParams, Link, useHistory } from 'react-router-dom'\r\nimport { StoreProducts } from '../data/StoreProducts'\r\nimport { useAuth, useStoreUpdate } from '../contexts/FirebaseContext';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowAltCircleRight, faArrowAltCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { addToCart } from '../service/cartService'\r\n\r\nexport default function ProductPage() {\r\n    const [product, setProduct] = useState('')\r\n    const [userMail, setUserMail] = useState(undefined)\r\n    const [itemAdd, setItemAdd] = useState(true)\r\n    const user = useAuth()\r\n    const { id } = useParams()\r\n    const updateStore = useStoreUpdate()\r\n    const history = useHistory()\r\n\r\n  \r\n    const getProduct = async () => {\r\n        let foundProduct = await StoreProducts.filter(product => product._id === +id)\r\n        setProduct(...foundProduct)\r\n    }\r\n\r\n    const OnAddToCart = async (itemId, name, url, price, category, type, description) => {\r\n        const userColl =  userMail\r\n\r\n        try {\r\n            await addToCart(userColl, itemId, name, url, price, category, type, description)\r\n            await updateStore()\r\n            await setItemAdd(false)\r\n            await setTimeout(() => {\r\n                setItemAdd(true)\r\n            }, 3000); \r\n        }\r\n        catch {\r\n            return history.push('/login')\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user.currentUser) setUserMail(user.currentUser.email)\r\n        if (id !== 0) getProduct()\r\n    }, [id])\r\n\r\n    return (\r\n        <main className=\"product-page\">\r\n            <div className=\"container\">\r\n            <h2 className={itemAdd ? `cart-added` : 'cart-added active'}>Item has been added to your cart</h2>\r\n\r\n                <h3>{product.name}</h3>\r\n                <div className=\"img-arrow-container\">\r\n                    {product._id - 1 === 0 ?\r\n                        <Link to={`/store/${1}`}><FontAwesomeIcon size=\"lg\" icon={faArrowAltCircleLeft} /></Link>\r\n                        :\r\n                        <Link to={`/store/${product._id - 1}`}><FontAwesomeIcon size=\"lg\" icon={faArrowAltCircleLeft} /></Link>\r\n                    }\r\n                    <img height=\"300px\" width=\"300px\" src={product.url} />\r\n                    {product._id + 1 === 10 ?\r\n                        <Link to={`/store/${1}`}><FontAwesomeIcon size=\"lg\" icon={faArrowAltCircleRight} /></Link>\r\n                        :\r\n                        <Link to={`/store/${product._id + 1}`}><FontAwesomeIcon size=\"lg\" icon={faArrowAltCircleRight} /></Link>\r\n                    }\r\n                </div>\r\n                <p>${product.price}</p>\r\n                <p>{product.description}</p>\r\n                <button onClick={async () => {\r\n                    await OnAddToCart(product._id, product.name, product.url, \r\n                        product.price, product.category, product.type, product.description)\r\n                }}>Add To Cart</button>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\pages\\Login.jsx",["139"],"import React, { useRef, useState } from 'react'\r\nimport { useAuth } from '../contexts/FirebaseContext';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Logo from '../cmps/Logo'\r\n\r\nexport default function Login() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { login } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [notification, setNotification] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            setNotification('connected')\r\n            history.push(\"/store\")\r\n        } catch {\r\n            setError('Failed to login')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"sign-up container\">\r\n            <div className=\"card\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <Logo />\r\n                    </div>\r\n                    <div className=\"text-inputs\">\r\n                        {error && <h3>{error}</h3>}\r\n                        <input type=\"email\" placeholder=\"enter your email\" required ref={emailRef} />\r\n                        <input type=\"password\" placeholder=\"password\" required ref={passwordRef} />\r\n                    </div>\r\n                    <button disabled={loading}>Submit</button>\r\n\r\n                    <div className=\"redirect\">not a member yet ? <Link to=\"/signup\"> Sign up</Link></div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\contexts\\FirebaseContext.jsx",["140","141"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport { auth } from '../firebase/firebase';\r\nimport firebase from '../firebase/firebase';\r\n\r\nconst FirebaseContext = React.createContext()\r\nconst StoreContext = React.createContext()\r\nconst StoreContextUpdate = React.createContext()\r\n\r\nexport function useAuth() {\r\n    return useContext(FirebaseContext)\r\n}\r\nexport function useStore() {\r\n    return useContext(StoreContext)\r\n}\r\n\r\nexport function useStoreUpdate() {\r\n    return useContext(StoreContextUpdate)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState();\r\n    const [loading, setLoading] = useState(true)\r\n    const [userMail, setUserMail] = useState(undefined)\r\n    const [userCart, setUserCart] = useState(undefined)\r\n    const userDoc = firebase.firestore().collection(\"cart\").doc(userMail).collection(\"items\")\r\n\r\n    const updateCart = () => {\r\n        userDoc.get().then(async (querySnapshot) => {\r\n            const item = await []\r\n            await querySnapshot.forEach(async (doc) => {\r\n                await item.push(doc.data())\r\n            })\r\n            await setUserCart(item)\r\n        })\r\n\r\n    }\r\n\r\n\r\n    async function refreshCart() {\r\n        await setUserMail(currentUser.email)\r\n        await updateCart()\r\n    }\r\n\r\n    function signup(email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function login(email, pasword) {\r\n        return auth.signInWithEmailAndPassword(email, pasword)\r\n    }\r\n\r\n    function logout() {\r\n        return auth.signOut()\r\n    }\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(async user => {\r\n            await setCurrentUser(user)\r\n            await setLoading(false)\r\n        })\r\n        return unsubscribe\r\n    }, [currentUser])\r\n\r\n\r\n    useEffect(() => {\r\n        if (currentUser && currentUser.email) {\r\n            console.log(userCart.length);\r\n            refreshCart()\r\n        }\r\n    }, [userMail])\r\n\r\n    useEffect(() => {\r\n\r\n        updateCart()\r\n    }, [])\r\n\r\n\r\n    const value = {\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout\r\n    }\r\n    return (\r\n        <FirebaseContext.Provider value={value}>\r\n            <StoreContext.Provider value={userCart && userCart.length}>\r\n                <StoreContextUpdate.Provider value={updateCart}>\r\n                    {!loading && children}\r\n                </StoreContextUpdate.Provider>\r\n            </StoreContext.Provider>\r\n        </FirebaseContext.Provider>\r\n    )\r\n}\r\n","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\service\\cartService.js",["142"],"import firebase from 'firebase';\r\n\r\n\r\nexport async function addToCart(userMail, itemId, name, url, price, category, type, description) {\r\n\r\n    const ammout = 1\r\n    const cartItem = { itemId, name, url, price, category, type, description, ammout }\r\n\r\n    if (userMail === undefined) throw console.error('please Login');\r\n\r\n    const db = await firebase.firestore()\r\n    const userDoc = await firebase.firestore().collection(\"cart\").doc(userMail)\r\n\r\n    await db.collection(\"cart\").doc(userMail).collection(\"items\").add({\r\n        cartItem\r\n    })\r\n    await db.collection(\"cart\").doc(userMail).collection(\"items\").get()\r\n     .then(snapshot => console.log(snapshot.size));\r\n \r\n}\r\n","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\data\\StoreProducts.js",[],"C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\firebase\\firebase.js",[],"C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\Telescope.jsx",["143"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nexport default function Telescope() {\r\n    return (\r\n        <div className=\"telescope-power\">\r\n            <h1>Discover the true power of telescope</h1>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\GetReady.jsx",[],"C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\Header.jsx",[],"C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\ContactUs.jsx",[],"C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\Logo.jsx",[],"C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\EmptyCart.jsx",[],"C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\ProductList.jsx",[],"C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\MobileNavbar.jsx",["144","145","146","147","148","149"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Menu2 from '../style/icons/menu2.png';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faShoppingCart, faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useAuth, useStore } from '../contexts/FirebaseContext';\r\nimport firebase from 'firebase';\r\n\r\nexport default function MobileNavbar() {\r\n    const user = useAuth()\r\n    const cart = useStore()\r\n    const [userCart, setUserCart] = useState(0)\r\n    const [userMail, setUserMail] = useState(undefined)\r\n    const [sideNav, setSideNav] = useState('')\r\n\r\n    const userDoc = userMail ? firebase.firestore().collection(\"cart\").doc(user.currentUser.email).collection(\"items\") : undefined;\r\n\r\n\r\n\r\n\r\n    const toggleNav = () => {\r\n        sideNav === '-active' ? setSideNav('') : setSideNav('-active')\r\n    }\r\n\r\n\r\n    const updateCart = () => {\r\n        if (userDoc === undefined) return\r\n        userDoc.get().then(async (querySnapshot) => {\r\n            setUserCart(querySnapshot.size)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        if (user.currentUser) {\r\n            setUserMail(user.currentUser.email);\r\n            updateCart()\r\n        }\r\n    }, [userDoc])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mobile-navbar\">\r\n                {user.currentUser && user.currentUser.email !== null ?\r\n                    <>\r\n                        <img onClick={toggleNav} src={Menu2} />\r\n                        <div>\r\n                            <Link to=\"/cart\" className=\"btn-white\"> <FontAwesomeIcon size=\"lg\" icon={faShoppingCart} /><span>{userCart ? userCart : 0}</span></Link>\r\n                            {/* <Link to={`/profile`} className=\"btn-white\"><FontAwesomeIcon size=\"lg\" icon={faUserCircle} /> </Link> */}\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <img onClick={toggleNav} src={Menu2} />\r\n                        <div>\r\n                            <Link to=\"/cart\" className=\"btn-white\"> <FontAwesomeIcon size=\"lg\" icon={faShoppingCart} /><span>0</span></Link>\r\n                            {/* <Link to={`/login`} className=\"btn-white\"><FontAwesomeIcon size=\"lg\" icon={faUserCircle} /> </Link> */}\r\n                        </div>\r\n\r\n                    </>\r\n                }\r\n            </div>\r\n\r\n            <div onClick={toggleNav} className={'side-nav' + sideNav}>\r\n                <div className=\"dynamic-links\">\r\n                    {user.currentUser && user.currentUser.email !== null ?\r\n\r\n                        <div className=\"dynamic-links\">\r\n                            {/* <Link onClick={toggleNav} to=\"/profile\" className=\"sidenav-link\" >Profile</Link> */}\r\n                            <Link onClick={toggleNav} to=\"/cart\" className=\"sidenav-link\" >My Cart</Link>\r\n                            <button onClick={() => {\r\n                                user.logout()\r\n                            }}>log out</button>\r\n                        </div> :\r\n\r\n\r\n                        <div className=\"dynamic-links\">\r\n                            <Link onClick={toggleNav} to=\"/login\" className=\"sidenav-link\" >log in</Link>\r\n                            <Link onClick={toggleNav} to=\"/signup\" className=\"sidenav-link\">Sign up</Link>\r\n                        </div>\r\n\r\n                    }\r\n                </div>\r\n                <div onClick={toggleNav} className={'sidenav-links'}>\r\n                    <Link onClick={toggleNav} className=\"sidnav-link\" to=\"/homepage\" >Home</Link>\r\n                    <Link onClick={toggleNav} className=\"sidnav-link\" to=\"/store\" >Store</Link>\r\n                    {/* <Link onClick={toggleNav} className=\"sidnav-link\" to=\"/contact\" >Contact us</Link> */}\r\n                </div>\r\n\r\n\r\n                <button onClick={toggleNav} className=\"close-nav\">X</button>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\DesktopNav.jsx",["150","151"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/FirebaseContext';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faShoppingCart, faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport firebase from 'firebase';\r\n\r\nimport Logo from '../cmps/Logo'\r\n\r\n\r\nexport default function DesktopNav() {\r\n    const history = useHistory()\r\n    const user = useAuth()\r\n    const [userCart, setUserCart] = useState(0)\r\n    const [userMail, setUserMail] = useState(undefined)\r\n    \r\n    const itemsColl = userMail ? firebase.firestore().collection(\"cart\").doc(user.currentUser.email).collection(\"items\") : undefined\r\n\r\n\r\n    const updateCart = () => {\r\n        if (itemsColl === undefined) return\r\n        itemsColl.get().then(async (querySnapshot) => {\r\n            setUserCart(querySnapshot.size)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user.currentUser) {\r\n\r\n            setUserMail(user.currentUser.email);\r\n            updateCart()\r\n        }\r\n    },\r\n        [itemsColl])\r\n\r\n \r\n\r\n    return (\r\n        <div className=\"desktop-navbar\">\r\n            <Logo />\r\n            <div className=\"nav-links\">\r\n                <Link to=\"/homepage\" className=\"nav-link\">Home</Link>\r\n                <Link to=\"/store\" className=\"nav-link\">Store</Link>\r\n                {/* <Link to=\"/about\" className=\"nav-link\">About</Link> */}\r\n            </div>\r\n\r\n            {user.currentUser && user.currentUser.email !== null ?\r\n                <div className=\"dynamic-links\">\r\n                    <Link to=\"/cart\" className=\"btn-white\"> <FontAwesomeIcon size=\"lg\" icon={faShoppingCart} />\r\n                        <span>{userCart && userCart}</span></Link>\r\n                    <button onClick={() => {\r\n                        user.logout()\r\n                        history.push(\"/\")\r\n                    }}>log out</button>\r\n                </div>\r\n                :\r\n                <div className=\"dynamic-links\">\r\n                    <Link to=\"/login\" className=\"nav-link\">log in</Link>\r\n                    <Link to=\"/signup\" className=\"nav-link\">Sign up</Link>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\Filters.jsx",[],"C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\Products.jsx",[],"C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\Pagination.jsx",[],"C:\\Users\\Yaniv\\Desktop\\dev\\fire-cosmos\\src\\cmps\\ProductPreview.jsx",[],["152","153"],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":4,"column":8,"nodeType":"160","messageId":"161","endLine":4,"endColumn":17},{"ruleId":"158","severity":1,"message":"162","line":12,"column":12,"nodeType":"160","messageId":"161","endLine":12,"endColumn":24},{"ruleId":"163","severity":1,"message":"164","line":31,"column":8,"nodeType":"165","endLine":31,"endColumn":18,"suggestions":"166"},{"ruleId":"163","severity":1,"message":"167","line":36,"column":8,"nodeType":"165","endLine":36,"endColumn":18,"suggestions":"168"},{"ruleId":"163","severity":1,"message":"169","line":43,"column":8,"nodeType":"165","endLine":43,"endColumn":10,"suggestions":"170"},{"ruleId":"171","severity":1,"message":"172","line":113,"column":19,"nodeType":"173","messageId":"174","endLine":113,"endColumn":21},{"ruleId":"171","severity":1,"message":"172","line":113,"column":31,"nodeType":"173","messageId":"174","endLine":113,"endColumn":33},{"ruleId":"158","severity":1,"message":"175","line":3,"column":8,"nodeType":"160","messageId":"161","endLine":3,"endColumn":16},{"ruleId":"158","severity":1,"message":"176","line":6,"column":12,"nodeType":"160","messageId":"161","endLine":6,"endColumn":21},{"ruleId":"158","severity":1,"message":"177","line":7,"column":12,"nodeType":"160","messageId":"161","endLine":7,"endColumn":15},{"ruleId":"158","severity":1,"message":"178","line":7,"column":17,"nodeType":"160","messageId":"161","endLine":7,"endColumn":23},{"ruleId":"158","severity":1,"message":"179","line":8,"column":21,"nodeType":"160","messageId":"161","endLine":8,"endColumn":31},{"ruleId":"163","severity":1,"message":"180","line":45,"column":8,"nodeType":"165","endLine":45,"endColumn":12,"suggestions":"181"},{"ruleId":"182","severity":1,"message":"183","line":59,"column":21,"nodeType":"184","endLine":59,"endColumn":75},{"ruleId":"158","severity":1,"message":"162","line":11,"column":12,"nodeType":"160","messageId":"161","endLine":11,"endColumn":24},{"ruleId":"163","severity":1,"message":"185","line":69,"column":8,"nodeType":"165","endLine":69,"endColumn":18,"suggestions":"186"},{"ruleId":"163","severity":1,"message":"169","line":74,"column":8,"nodeType":"165","endLine":74,"endColumn":10,"suggestions":"187"},{"ruleId":"158","severity":1,"message":"188","line":12,"column":11,"nodeType":"160","messageId":"161","endLine":12,"endColumn":18},{"ruleId":"158","severity":1,"message":"189","line":2,"column":9,"nodeType":"160","messageId":"161","endLine":2,"endColumn":13},{"ruleId":"158","severity":1,"message":"190","line":2,"column":16,"nodeType":"160","messageId":"161","endLine":2,"endColumn":26},{"ruleId":"158","severity":1,"message":"191","line":5,"column":26,"nodeType":"160","messageId":"161","endLine":5,"endColumn":38},{"ruleId":"158","severity":1,"message":"192","line":11,"column":11,"nodeType":"160","messageId":"161","endLine":11,"endColumn":15},{"ruleId":"163","severity":1,"message":"193","line":37,"column":8,"nodeType":"165","endLine":37,"endColumn":17,"suggestions":"194"},{"ruleId":"182","severity":1,"message":"183","line":45,"column":25,"nodeType":"184","endLine":45,"endColumn":64},{"ruleId":"182","severity":1,"message":"183","line":53,"column":25,"nodeType":"184","endLine":53,"endColumn":64},{"ruleId":"158","severity":1,"message":"191","line":5,"column":26,"nodeType":"160","messageId":"161","endLine":5,"endColumn":38},{"ruleId":"163","severity":1,"message":"193","line":34,"column":9,"nodeType":"165","endLine":34,"endColumn":20,"suggestions":"195"},{"ruleId":"154","replacedBy":"196"},{"ruleId":"156","replacedBy":"197"},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"no-unused-vars","'Telescope' is defined but never used.","Identifier","unusedVar","'notification' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'updateStore' and 'user.currentUser'. Either include them or remove the dependency array.","ArrayExpression",["200"],"React Hook useEffect has missing dependencies: 'updateData' and 'updateStore'. Either include them or remove the dependency array.",["201"],"React Hook useEffect has a missing dependency: 'updateCart'. Either include it or remove the dependency array.",["202"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'firebase' is defined but never used.","'isVisible' is assigned a value but never used.","'img' is assigned a value but never used.","'setImg' is assigned a value but never used.","'setLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getProduct' and 'user.currentUser'. Either include them or remove the dependency array.",["203"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'currentUser', 'refreshCart', and 'userCart.length'. Either include them or remove the dependency array.",["204"],["205"],"'userDoc' is assigned a value but never used.","'Link' is defined but never used.","'useHistory' is defined but never used.","'faUserCircle' is defined but never used.","'cart' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'updateCart' and 'user.currentUser'. Either include them or remove the dependency array.",["206"],["207"],["198"],["199"],"no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"212","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},"Update the dependencies array to be: [updateStore, user.currentUser, userCart]",{"range":"223","text":"224"},"Update the dependencies array to be: [updateData, updateStore, userMail]",{"range":"225","text":"226"},"Update the dependencies array to be: [updateCart]",{"range":"227","text":"228"},"Update the dependencies array to be: [getProduct, id, user.currentUser]",{"range":"229","text":"230"},"Update the dependencies array to be: [currentUser, refreshCart, userCart.length, userMail]",{"range":"231","text":"232"},{"range":"233","text":"228"},"Update the dependencies array to be: [updateCart, user.currentUser, userDoc]",{"range":"234","text":"235"},"Update the dependencies array to be: [itemsColl, updateCart, user.currentUser]",{"range":"236","text":"237"},[1006,1016],"[updateStore, user.currentUser, userCart]",[1098,1108],"[updateData, updateStore, userMail]",[1172,1174],"[updateCart]",[1626,1630],"[getProduct, id, user.currentUser]",[2002,2012],"[currentUser, refreshCart, userCart.length, userMail]",[2071,2073],[1259,1268],"[updateCart, user.currentUser, userDoc]",[1098,1109],"[itemsColl, updateCart, user.currentUser]"]